generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model Workflow {
  id          String  @id @default(cuid())
  userid      String
  name        String
  description String?
  definition  String

  lastRunAt     DateTime?
  lastRunId     String?
  lastRunStatus String?

  status    String
  createAt  DateTime            @default(now())
  updateAt  DateTime            @updatedAt
  execution WorkflowExecution[]

  @@unique([userid, name])
}

model WorkflowExecution {
  id              String           @id @default(cuid())
  workflowId      String
  userid          String
  trigger         String
  status          String
  creditsConsumed Int              @default(0)
  createAt        DateTime         @default(now())
  startAt         DateTime?
  completeAt      DateTime?
  phase           ExecutionPhase[]
  workflow        Workflow         @relation(fields: [workflowId], references: [id], onDelete: Cascade)
}

model ExecutionPhase {
  id                  String            @id @default(cuid())
  userid              String
  status              String
  number              Int
  node                String
  name                String
  startAt             DateTime?
  completeAt          DateTime?
  inputs              String?
  outputs             String?
  creditsConsumed     Int?
  workflowExecutionId String
  exection            WorkflowExecution @relation(fields: [workflowExecutionId], references: [id], onDelete: Cascade)
  logs        ExecutionLog[]
}

model ExecutionLog {
  id               String         @id @default(cuid())
  message          String
  logLevel         String
  timestamp        DateTime       @default(now())
  executionPhaseId String
  executionPhase   ExecutionPhase @relation(fields: [executionPhaseId], references: [id], onDelete: Cascade)
}
